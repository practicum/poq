Automatically generated by Mendeley 1.7.1
Any changes to this file will be lost if it is regenerated by Mendeley.

@book{Almeida2011,
abstract = {The use of mathematical methods in the development of software is essential when reliable systems are sought; in particular they are now strongly recommended by the official norms adopted in the production of critical software. Program Verification is the area of computer science that studies mathematical methods for checking that a program conforms to its specification. This text is a self-contained introduction to program verification using logic-based methods, presented in the broader context of formal methods for software engineering. The idea of specifying the behaviour of individual software components by attaching contracts to them is now a widely followed approach in program development, which has given rise notably to the development of a number of behavioural interface specification languages and program verification tools. A foundation for the static verification of programs based on contract-annotated routines is laid out in the book. These can be independently verified, which provides a modular approach to the verification of software. The text assumes only basic knowledge of standard mathematical concepts that should be familiar to any computer science student. It includes a self-contained introduction to propositional logic and first-order reasoning with theories, followed by a study of program verification that combines theoretical and practical aspects - from a program logic (a variant of Hoare logic for programs containing user-provided annotations) to the use of a realistic tool for the verification of C programs (annotated using the ACSL specification language), through the generation of verification conditions and the static verification of runtime errors.},
author = {Almeida, Jos\'{e} Bacelar and Frade, Maria Jo\~{a}o and {Sousa Pinto}, Jorge and {Melo de Sousa}, Sim\~{a}o},
pages = {263},
publisher = {Springer},
title = {{Rigorous Software Development}},
url = {http://books.google.com/books?id=9KH7-p1rQuYC\&pgis=1},
year = {2011}
}
@book{Ambler2006,
abstract = {Refactoring has proven its value in a wide range of development projects-helping software professionals improve system designs, maintainability, extensibility, and performance. Now, for the first time, leading agile methodologist Scott Ambler and renowned consultant Pramodkumar Sadalage introduce powerful refactoring techniques specifically designed for database systems.Ambler and Sadalage demonstrate how small changes to table structures, data, stored procedures, and triggers can significantly enhance virtually any database design-without changing semantics. You'll learn how to evolve database schemas in step with source code-and become far more effective in projects relying on iterative, agile methodologies.This comprehensive guide and reference helps you overcome the practical obstacles to refactoring real-world databases by covering every fundamental concept underlying database refactoring. Using start-to-finish examples, the authors walk you through refactoring simple standalone database applications as well as sophisticated multi-application scenarios. You'll master every task involved in refactoring database schemas, and discover best practices for deploying refactorings in even the most complex production environments.The second half of this book systematically covers five major categories of database refactorings. You'll learn how to use refactoring to enhance database structure, data quality, and referential integrity; and how to refactor both architectures and methods. This book provides an extensive set of examples built with Oracle and Java and easily adaptable for other languages, such as C\#, C++, or VB.NET, and other databases, such as DB2, SQL Server, MySQL, and Sybase.Using this book's techniques and examples, you can reduce waste, rework, risk, and cost-and build database systems capable of evolving smoothly, far into the future.},
author = {Ambler, Scott W. and Sadalage, Pramod J.},
isbn = {0321293533},
pages = {350},
publisher = {Addison Wesley},
title = {{Refactoring databases: evolutionary database design}},
url = {http://books.google.com/books?id=puBQAAAAMAAJ\&pgis=1},
year = {2006}
}
@inproceedings{Baltopoulos:2011:MDI:2032497.2032530,
address = {Berlin, Heidelberg},
author = {Baltopoulos, Ioannis G and Borgstr\"{o}m, Johannes and Gordon, Andrew D},
booktitle = {Proceedings of the 25th European conference on Object-oriented programming},
isbn = {978-3-642-22654-0},
pages = {484--509},
publisher = {Springer-Verlag},
series = {ECOOP'11},
title = {{Maintaining database integrity with refinement types}},
url = {http://dl.acm.org/citation.cfm?id=2032497.2032530},
year = {2011}
}
@book{Beck2000,
abstract = {The new concept of Extreme Programming (XP) is gaining more and more acceptance, partially because it is controversial, but primarily because it is particularly well-suited to help the small software development team succeed. This book serves as the introduction to XP that the market will need. XP is controversial, many software development sacred cows don't make the cut in XP; it forces practitioners to take a fresh look at how software is developed. The author recognizes that this "lightweight" methodology is not for everyone. However, anyone interested in discovering what this new concept can offer them will want to start with this book.},
author = {Beck, Kent},
pages = {190},
publisher = {Addison-Wesley Professional},
title = {{Extreme Programming Explained: Embrace Change}},
url = {http://books.google.com/books?id=G8EL4H4vf7UC\&pgis=1},
year = {2000}
}
@book{Ben-Gan2005,
abstract = {Take a detailed look at the internal architecture of T-SQL—and unveil the power of set-based querying—with comprehensive reference and advice from the experts. Database developers and administrators get best practices, sample databases, and code to master the intricacies of the programming language—solving complex problems with real-world solutions. Discover how to: Understand logical and physical query processing Apply a methodology to optimize query tuning Solve relational division problems Use CTEs and ranking functions to simplify and optimize solutions Aggregate data with various techniques, including tiebreakers, pivoting, histograms, and grouping factors Use the TOP option in a query to modify data Query specialized data structures with recursive logic, materialized path, or nested sets solutions PLUS—Improve your logic and get to the heart of querying problems with logic puzzles Get code and database samples on the Web},
author = {Ben-Gan, Itzik and Kollar, Lubor and Sarka, Dejan},
isbn = {0735623139},
pages = {632},
publisher = {Microsoft Press},
title = {{Inside Microsoft SQL Server 2005: T-SQL Querying}},
url = {http://books.google.com/books?id=ChnagMJDoTUC\&pgis=1},
year = {2006}
}
@inproceedings{Bjorner:2011:ETZ:2178104.2178106,
address = {Berlin, Heidelberg},
author = {Bj\o rner, Nikolaj},
booktitle = {Proceedings of the First international conference on Certified Programs and Proofs},
doi = {10.1007/978-3-642-25379-9\_1},
isbn = {978-3-642-25378-2},
pages = {1--2},
publisher = {Springer-Verlag},
series = {CPP'11},
title = {{Engineering theories with z3}},
url = {http://dx.doi.org/10.1007/978-3-642-25379-9\_1},
year = {2011}
}
@book{Bradley2010,
abstract = {Computational logic is a fast-growing field with applications in artificial intelligence, constraint solving, and the design and verification of software and hardware systems. Written with graduate and advanced undergraduate students in mind, this textbook introduces computational logic from the foundations of first-order logic to state-of-the-art decision procedures for arithmetic, data structures, and combination theories. This textbook also presents a logical approach to engineering correct software. The increasing ubiquity of computers makes implementing correct systems more important than ever. Verification exercises develop the reader's facility in specifying and verifying software using logic. The treatment of verification concludes with an introduction to the static analysis of software, an important component of modern verification systems. For readers interested in learning more about computational logic, decision procedures, verification, and other areas of formal methods, the final chapter outlines courses of further study.},
author = {Bradley, Aaron R. and Manna, Zohar},
isbn = {3540741135},
pages = {366},
publisher = {Springer},
title = {{The Calculus of Computation: Decision Procedures with Applications to Verification}},
url = {http://books.google.com/books?id=0MbX7xVpffAC\&pgis=1},
year = {2010}
}
@book{Celko2010,
abstract = {SQL for Smarties was hailed as the first book devoted explicitly to the advanced techniques needed to transform an experienced SQL programmer into an expert. Now, 10 years later and in the third edition, this classic still reigns supreme as the book written by an SQL master that teaches future SQL masters. These are not just tips and techniques; Joe also offers the best solutions to old and new challenges and conveys the way you need to think in order to get the most out of SQL programming efforts for both correctness and performance. In the third edition, Joe features new examples and updates to SQL-99, expanded sections of Query techniques, and a new section on schema design, with the same war-story teaching style that made the first and second editions of this book classics.* Expert advice from a noted SQL authority and award-winning columnist, who has given ten years of service to the ANSI SQL standards committee and many more years of dependable help to readers of online forums. * Teaches scores of advanced techniques that can be used with any product, in any SQL environment, whether it is an SQL-92 or SQL-99 environment. * Offers tips for working around system deficiencies. * Continues to use war stories--updated!--that give insights into real-world SQL programming challenges.},
author = {Celko, Joe},
isbn = {0123820227},
pages = {840},
publisher = {Morgan Kaufmann},
title = {{Joe Celko's SQL for Smarties: Advanced SQL Programming}},
url = {http://books.google.com/books?id=Hi9fMnOoRtAC\&pgis=1},
year = {2010}
}
@inproceedings{Colmerauer:1993:BP:154766.155362,
address = {New York, NY, USA},
author = {Colmerauer, Alain and Roussel, Philippe},
booktitle = {The second ACM SIGPLAN conference on History of programming languages},
doi = {10.1145/154766.155362},
isbn = {0-89791-570-4},
pages = {37--52},
publisher = {ACM},
series = {HOPL-II},
title = {{The birth of Prolog}},
url = {http://doi.acm.org/10.1145/154766.155362},
year = {1993}
}
@article{DBLP:journals/ai/KowalskiK71,
author = {Kowalski, Robert A and Kuehner, Donald},
journal = {Artif. Intell.},
number = {3/4},
pages = {227--260},
title = {{Linear Resolution with Selection Function}},
volume = {2},
year = {1971}
}
@inproceedings{Danaparamita:2011:QHU:1951365.1951440,
address = {New York, NY, USA},
author = {Danaparamita, Jonathan and Gatterbauer, Wolfgang},
booktitle = {Proceedings of the 14th International Conference on Extending Database Technology},
doi = {10.1145/1951365.1951440},
isbn = {978-1-4503-0528-0},
pages = {558--561},
publisher = {ACM},
series = {EDBT/ICDT '11},
title = {{QueryViz: helping users understand SQL queries and their patterns}},
url = {http://doi.acm.org/10.1145/1951365.1951440},
year = {2011}
}
@book{Date1997,
abstract = {The previous edition of this book established itself as the most complete and understandable treatment of the SQL standard generally available. Many changes have occurred in the SQL standards world since that edition was published, however: a major new component, the Call-Level Interface (SQL/CLI), was added in 1995. Another major new component, the Persistent Stored Modules feature (SQL/PSM), is nearing completion and is due to be added to the standard in late 1996 or early 1997. The original 1992 standard itself has been significantly changed and corrected through the publication of two extensive Technical Corrigenda, one in 1994 and one in 1996.All of these changes are reflected in this Fourth Edition. Earlier editions of this book established a tradition of careful, clear, and accurate explanation of complex technical material. This new edition continues that tradition.},
author = {Date, C. J. and Darwen, Hugh},
pages = {522},
publisher = {Addison-Wesley},
title = {{A guide to the SQL standard: a user's guide to the standard database language SQL}},
url = {http://books.google.com/books?id=d89QAAAAMAAJ\&pgis=1},
year = {1997}
}
@book{Date2009,
author = {Date, C.J.},
publisher = {O'Reilly Media},
title = {{SQL and Relational Theory: How to Write Accurate SQL Code}},
url = {http://www.amazon.com/SQL-Relational-Theory-Write-Accurate/dp/0596523068},
year = {2009}
}
@inproceedings{Elhemali:2007:ESS:1247480.1247598,
address = {New York, NY, USA},
author = {Elhemali, Mostafa and Galindo-Legaria, C\'{e}sar A and Grabs, Torsten and Joshi, Milind M},
booktitle = {Proceedings of the 2007 ACM SIGMOD international conference on Management of data},
doi = {10.1145/1247480.1247598},
isbn = {978-1-59593-686-8},
keywords = { query optimization, relational database systems, subqueries,microsoft SQL server},
pages = {993--1004},
publisher = {ACM},
series = {SIGMOD '07},
title = {{Execution strategies for SQL subqueries}},
url = {http://doi.acm.org/10.1145/1247480.1247598},
year = {2007}
}
@book{Elmasri2007,
abstract = {Fundamentals of DATABASE SYSTEMS, Fifth Edition Ramez Elmasri, University of Texas at Arlington Shamkant B. Navathe, Georgia Institute of Technology ISBN 0-321-36957-2 "Fundamentals of Database Systems is a leading example of a database text that approaches the subject from the technical, rather than the business perspective. It offers instructors more than enough material to choose from as they seek to balance coverage of theoretical with practical material, design with programming, application concerns with implementation issues, and items of historical interest with a view of cutting edge topics." Henry A. Etlinger, Rochester Institute of Technology "This is an outstanding, up-to-date database book, appropriate for both undergraduate and graduate courses. It contains good examples, and clearly describes how to design good, operable databases as well as retrieve and manipulate data from an existing database." Peter Ng, The University of Texas - Pan American With clear explanations of theory and design, broad coverage of models and real systems, and an up-to-date introduction to modern database technologies, Elmasri and Navathe's text continues to be the leading introduction to database systems. Current, practical examples keep readers engaged while new end-of-chapter exercises and a new lab manual provide hands-on experience building database applications with modern technologies like Oracle, MySQL, and SQLServer. This Fifth Edition stays fresh with coverage of the latest, most popular database topics, including: Mobile databases, GIS and Genome Databases under emerging applications Database Security A new chapter on Web script programming for databases using PHP},
author = {Elmasri, Ramez and Navathe, Sham},
pages = {1139},
publisher = {Pearson/Addison Wesley},
title = {{Fundamentals of Database Systems}},
url = {http://books.google.com/books?id=owUZAQAAIAAJ\&pgis=1},
year = {2007}
}
@misc{Fetter,
author = {Fetter, David},
booktitle = {OSCON 2009},
title = {{High Performance SQL with PostgreSQL 8.4}},
url = {http://assets.en.oreilly.com/1/event/27/High Performance SQL with PostgreSQL Presentation.pdf},
year = {2009}
}
@article{Galindo-Legaria:2001:OOS:376284.375748,
address = {New York, NY, USA},
author = {Galindo-Legaria, C\'{e}sar and Joshi, Milind},
doi = {10.1145/376284.375748},
issn = {0163-5808},
journal = {SIGMOD Rec.},
month = may,
number = {2},
pages = {571--581},
publisher = {ACM},
title = {{Orthogonal optimization of subqueries and aggregation}},
url = {http://doi.acm.org/10.1145/376284.375748},
volume = {30},
year = {2001}
}
@article{Godfrey:2001:ECD:376284.375749,
address = {New York, NY, USA},
author = {Godfrey, Parke and Gryz, Jarek and Zuzarte, Calisto},
doi = {10.1145/376284.375749},
issn = {0163-5808},
journal = {SIGMOD Rec.},
month = may,
number = {2},
pages = {582--592},
publisher = {ACM},
title = {{Exploiting constraint-like data characterizations in query optimization}},
url = {http://doi.acm.org/10.1145/376284.375749},
volume = {30},
year = {2001}
}
@article{Hawkins:2012:IDR:2380656.2380677,
address = {New York, NY, USA},
author = {Hawkins, Peter and Rinard, Martin and Aiken, Alex and Sagiv, Mooly and Fisher, Kathleen},
doi = {10.1145/2380656.2380677},
issn = {0001-0782},
journal = {Commun. ACM},
month = dec,
number = {12},
pages = {91--99},
publisher = {ACM},
title = {{An introduction to data representation synthesis}},
url = {http://doi.acm.org/10.1145/2380656.2380677},
volume = {55},
year = {2012}
}
@article{Hoare:1969:ABC:363235.363259,
address = {New York, NY, USA},
author = {Hoare, C A R},
doi = {10.1145/363235.363259},
issn = {0001-0782},
journal = {Commun. ACM},
keywords = { formal language definition, machine-independent programming, program documentation, programming language design, theory of programming' proofs of programs,axiomatic method},
month = oct,
number = {10},
pages = {576--580},
publisher = {ACM},
title = {{An axiomatic basis for computer programming}},
url = {http://doi.acm.org/10.1145/363235.363259},
volume = {12},
year = {1969}
}
@misc{ISO1999,
booktitle = {SQL 1999},
shorttitle = {ISO},
title = {{ISO/IEC 9075:1999}},
year = {1999}
}
@inproceedings{Javid:2012:DFE:2320765.2320831,
address = {New York, NY, USA},
author = {Javid, Muhammad Akhter and Embury, Suzanne M},
booktitle = {Proceedings of the 2012 Joint EDBT/ICDT Workshops},
doi = {10.1145/2320765.2320831},
isbn = {978-1-4503-1143-4},
keywords = { testing, testing database applications,diagnosing faults},
pages = {239--244},
publisher = {ACM},
series = {EDBT-ICDT '12},
title = {{Diagnosing faults in embedded queries in database applications}},
url = {http://doi.acm.org/10.1145/2320765.2320831},
year = {2012}
}
@book{Karwin2010,
abstract = {Each chapter in this book helps you identify, explain, and correct a unique and dangerous antipattern. The four parts of the book group the anti?patterns in terms of logical database design, physical database design, queries, and application development. The chances are good that your application's database layer already contains problems such as Index Shotgun, Keyless Entry, Fear of the Unknown, and Spaghetti Query. This book will help you and your team find them. Even better, it will also show you how to fix them, and how to avoid these and other problems in the future. SQL Antipatterns gives you a rare glimpse into an SQL expert's playbook. Now you can stamp out these common database errors once and for all. Whatever platform or programming language you use, whether you're a junior programmer or a Ph.D., SQL Antipatterns will show you how to design and build databases, how to write better database queries, and how to integrate SQL programming with your application like an expert. You'll also learn the best and most current technology for full-text search, how to design code that is resistant to SQL injection attacks, and other techniques for success.},
author = {Karwin, Bill},
isbn = {1934356557},
pages = {333},
publisher = {Pragmatic Bookshelf},
title = {{SQL Antipatterns: Avoiding the Pitfalls of Database Programming}},
url = {http://books.google.com/books?id=Ghr4RAAACAAJ\&pgis=1},
year = {2010}
}
@inproceedings{Khalek:2008:QTG:1642931.1642961,
address = {Washington, DC, USA},
author = {Khalek, S A and Elkarablieh, B and Laleye, Y O and Khurshid, S},
booktitle = {Proceedings of the 2008 23rd IEEE/ACM International Conference on Automated Software Engineering},
doi = {10.1109/ASE.2008.34},
isbn = {978-1-4244-2187-9},
keywords = { ADUSA, Alloy Analyzer, Alloy tool-set, SQL query, black-box testing, bugs detection, database management systems, open-source database management system, query-aware data generation, query-aware test generation, relational constraint solver,commercial database management system},
pages = {238--247},
publisher = {IEEE Computer Society},
series = {ASE '08},
title = {{Query-Aware Test Generation Using a Relational Constraint Solver}},
url = {http://dx.doi.org/10.1109/ASE.2008.34},
year = {2008}
}
@inproceedings{Kowalski1974,
address = {Amsterdam},
author = {Kowalski, Robert A.},
booktitle = {Proceedings of IFIP Congress 1974},
pages = {569--574},
publisher = {North Holland Publishing Co.},
series = {IFIP '74},
title = {{Predicate Logic as Programming Language}},
url = {http://www.doc.ic.ac.uk/~rak/papers/IFIP 74.pdf},
year = {1974}
}
@book{Larman2002,
abstract = {For all undergraduate courses in object-oriented analysis and design. Builds on the overwhelming success of the First Edition. The topics covered in this book are increasingly recognized as core competencies by virtually all contemporary computer science departments, and in virtually all computer science curricula.This book teaches object-oriented analysis and design through iterations of a single, cohesive case study incrementally introducing key OO\&AD skills while emphasizing practical activities and principles. Renowned object technology leader Craig Larman introduces the popular UML 1.4 diagramming notation as a superior vehicle for expressing OO\&AD thoughts. Since OOA\&D should be taught (and practiced) within a coherent process, he presents a lightweight, agile version of the market-leading Unified Process (UP). Within his case study's context, he also introduces patterns robust, best-practice solutions to the most widely encountered design problems.},
author = {Larman, Craig},
isbn = {0131489062},
pages = {736},
publisher = {Prentice Hall Professional},
title = {{Applying Uml and Patterns: An Introduction to Object-Oriented Analysis and Design, and the Unified Process}},
url = {http://books.google.com/books?id=r8i-4En\_aa4C\&pgis=1},
year = {2004}
}
@book{Levene1999,
abstract = {Addressing important extensions of the relational database model, including deductive, temporal, and object-oriented databases, this book provides an overview of database modeling with the Entity-Relationship (ER) model and the relational model. The book focuses on the primary achievements in relational database theory, including query languages, integrity constraints, database design, computable queries, and concurrency control. This reference will shed light on the ideas underlying relational database systems and the problems that confront database designers and researchers.},
author = {Levene, Mark and Loizou, George},
pages = {625},
publisher = {Springer},
title = {{A Guided Tour of Relational Databases and Beyond}},
url = {http://books.google.com/books?id=CkYpI7QsLlQC\&pgis=1},
year = {1999}
}
@book{Lloyd2012,
author = {Lloyd, J. W.},
pages = {140},
publisher = {Springer-Verlag New York Incorporated},
title = {{Foundations of Logic Programming}},
url = {http://books.google.com/books?id=P0BhMQEACAAJ\&pgis=1},
year = {1984}
}
@article{Malecha:2010:TVR:1707801.1706329,
address = {New York, NY, USA},
author = {Malecha, Gregory and Morrisett, Greg and Shinnar, Avraham and Wisnesky, Ryan},
doi = {10.1145/1707801.1706329},
issn = {0362-1340},
journal = {SIGPLAN Not.},
keywords = { dependent types, relational model, separation logic,b+ tree},
month = jan,
number = {1},
pages = {237--248},
publisher = {ACM},
title = {{Toward a verified relational database management system}},
url = {http://doi.acm.org/10.1145/1707801.1706329},
volume = {45},
year = {2010}
}
@inproceedings{Maule:2008:IAD:1368088.1368150,
address = {New York, NY, USA},
author = {Maule, Andy and Emmerich, Wolfgang and Rosenblum, David S},
booktitle = {Proceedings of the 30th international conference on Software engineering},
doi = {10.1145/1368088.1368150},
isbn = {978-1-60558-079-1},
keywords = {impact analysis,tool},
mendeley-tags = {tool},
pages = {451--460},
publisher = {ACM},
series = {ICSE '08},
title = {{Impact analysis of database schema changes}},
url = {http://doi.acm.org/10.1145/1368088.1368150},
year = {2008}
}
@book{Melton2001,
abstract = {This book is the best way to make the leap from SQL-92 to SQL:1999, but it is much more than just a simple bridge between the two. The latest from celebrated SQL experts Jim Melton and Alan Simon, SQL:1999 is a comprehensive, eminently practical account of SQL's latest incarnation and a potent distillation of the details required to put it to work. Written to accommodate both novice and experienced SQL users, SQL:1999 focuses on the language's capabilities, from the basic to the advanced, and the ways that real applications take advantage of them. Throughout, the authors illustrate features and techniques with clear and often entertaining references to their own custom database, which can be downloaded from the companion Web site.* Gives authoritative coverage from an expert team that includes the editor of the SQL-92 and SQL:1999 standards.* Provides a general introduction to SQL that helps you understand its constituent parts, history, and place in the realm of computer languages.* Explains SQL:1999's more sophisticated features, including advanced value expressions, predicates, advanced SQL query expressions, and support for active databases.* Explores key issues for programmers linking applications to SQL databases.* Provides guidance on troubleshooting, internationalization, and changes anticipated in the next version of SQL.* Contains appendices devoted to database design, a complete SQL:1999 example, the standardization process, and more.},
author = {Melton, Jim and Simon, Alan R.},
pages = {893},
publisher = {Morgan Kaufmann},
title = {{SQL: 1999 - Understanding Relational Language Components}},
url = {http://books.google.com/books?id=wyhXvU0Eyg0C\&pgis=1},
year = {2001}
}
@inproceedings{Moseley06outof,
author = {Moseley, Ben and Marks, Peter},
booktitle = {SOFTWARE PRACTICE ADVANCEMENT (SPA)},
title = {{Out of the Tar Pit}},
year = {2006}
}
@inproceedings{Naqvi:1985:NFF:6012.15408,
address = {New York, NY, USA},
author = {Naqvi, Shamim A},
booktitle = {Proceedings of the fifth ACM SIGACT-SIGMOD symposium on Principles of database systems},
doi = {10.1145/6012.15408},
isbn = {0-89791-179-2},
pages = {114--122},
publisher = {ACM},
series = {PODS '86},
title = {{Negation as failure for first-order queries}},
url = {http://doi.acm.org/10.1145/6012.15408},
year = {1986}
}
@article{Robinson:1965:MLB:321250.321253,
address = {New York, NY, USA},
author = {Robinson, J A},
doi = {10.1145/321250.321253},
issn = {0004-5411},
journal = {J. ACM},
month = jan,
number = {1},
pages = {23--41},
publisher = {ACM},
title = {{A Machine-Oriented Logic Based on the Resolution Principle}},
url = {http://doi.acm.org/10.1145/321250.321253},
volume = {12},
year = {1965}
}
@book{Schumann2001,
abstract = {Growing demands for the quality, safety, and security of software can only be satisfied by the rigorous application of formal methods during software design. This book methodically investigates the potential of first-order logic automated theorem provers for applications in software engineering. Illustrated by complete case studies on protocol verification, verification of security protocols, and logic-based software reuse, this book provides techniques for assessing the prover's capabilities and for selecting and developing an appropriate interface architecture.},
author = {Schumann, Johann M.},
pages = {228},
publisher = {Springer},
title = {{Automated Theorem Proving in Software Engineering}},
url = {http://books.google.com/books?id=DjydBVLFaxMC\&pgis=1},
year = {2001}
}
@article{Shankar:2009:ADV:1592434.1592437,
address = {New York, NY, USA},
author = {Shankar, Natarajan},
doi = {10.1145/1592434.1592437},
issn = {0360-0300},
journal = {ACM Comput. Surv.},
month = oct,
number = {4},
pages = {20:1--20:56},
publisher = {ACM},
title = {{Automated deduction for verification}},
url = {http://doi.acm.org/10.1145/1592434.1592437},
volume = {41},
year = {2009}
}
@book{Sterling1994,
abstract = {This new edition of The Art of Prolog contains a number of important changes. Most background sections at the end of each chapter have been updated to take account of important recent research results, the references have been greatly expanded, and more advanced exercises have been added which have been used successfully in teaching the course.Part II, The Prolog Language, has been modified to be compatible with the new Prolog standard, and the chapter on program development has been significantly altered: the predicates defined have been moved to more appropriate chapters, the section on efficiency has been moved to the considerably expanded chapter on cuts and negation, and a new section has been added on stepwise enhancement—a systematic way of constructing Prolog programs developed by Leon Sterling.All but one of the chapters in Part III, Advanced Prolog Programming Techniques, have been substantially changed, with some major rearrangements. A new chapter on interpreters describes a rule language and interpreter for expert systems, which better illustrates how Prolog should be used to construct expert systems. The chapter on program transformation is completely new and the chapter on logic grammars adds new material for recognizing simple languages, showing how grammars apply to more computer science examples.},
author = {Sterling, Leon and Shapiro, Ehud Y.},
pages = {509},
publisher = {MIT Press},
title = {{The Art of Prolog: Advanced Programming Techniques}},
url = {http://books.google.com/books?id=w-XjuvpOrjMC\&pgis=1},
year = {1994}
}
@article{Stonebraker:2012:NON:2366316.2366319,
address = {New York, NY, USA},
author = {Stonebraker, Michael},
doi = {10.1145/2366316.2366319},
issn = {0001-0782},
journal = {Commun. ACM},
month = nov,
number = {11},
pages = {10--11},
publisher = {ACM},
title = {{New opportunities for New SQL}},
url = {http://doi.acm.org/10.1145/2366316.2366319},
volume = {55},
year = {2012}
}
@book{Tropashko2007,
abstract = {This indispensable SQL reference book is the first of its kind to leverage the benefits of design patterns to relational database SQL queries; all common SQL structures and design patterns are clearly categorized and described. Emphasizing the theoretical foundation for almost every type of SQL query problem, accompanying figures are included to help visualize the problem. Because SQL is a declarative language there are many ways to write any SQL query and professional database programmers must understand the correct way to write SQL for complicated database queries, and managers must institute formal SQL coding standards to improve productivity and maintainability. The SQL design patterns in this resource greatly improve the quality and productivity of systems development projects by forming a "best practices" foundation for all relational database queries.},
author = {Tropashko, Vadim},
isbn = {0977671542},
pages = {255},
publisher = {Rampant TechPress},
title = {{SQL Design Patterns: Expert Guide to SQL Programming}},
url = {http://books.google.com/books?id=ZzxDGQAACAAJ\&pgis=1},
year = {2006}
}
@inproceedings{Veanes:2010:QSS:1939141.1939165,
address = {Berlin, Heidelberg},
author = {Veanes, Margus and Tillmann, Nikolai and de Halleux, Jonathan},
booktitle = {Proceedings of the 16th international conference on Logic for programming, artificial intelligence, and reasoning},
isbn = {3-642-17510-4, 978-3-642-17510-7},
keywords = {tool},
mendeley-tags = {tool},
pages = {425--446},
publisher = {Springer-Verlag},
series = {LPAR'10},
title = {{Qex: symbolic SQL query explorer}},
url = {http://dl.acm.org/citation.cfm?id=1939141.1939165},
year = {2010}
}
@article{Zemke:2012:WNS:2206869.2206883,
address = {New York, NY, USA},
author = {Zemke, Fred},
doi = {10.1145/2206869.2206883},
issn = {0163-5808},
journal = {SIGMOD Rec.},
month = apr,
number = {1},
pages = {67--73},
publisher = {ACM},
title = {{What's new in SQL:2011}},
url = {http://doi.acm.org/10.1145/2206869.2206883},
volume = {41},
year = {2012}
}
@book{farrer_quantitative_2011,
address = {Chico, Calif.},
annote = {Access: http://hdl.handle.net/10211.4/296
External Resources: Cite This Item Search for versions with same title and author \{$\backslash$textbar\} Advanced options ...
Dissertation: Thesis \{(M.S.)--California\} State University, Chico.
Language: English
Access: http://hdl.handle.net/10211.4/296 Note: \{CSU\}, Chico Electronic Master's Thesis.
System Info: System requirements: Adobe Acrobat Reader.
Note(s): Includes abstract./ \{"Located\} in the Chico Digital Repository."/ Includes bibliographical references (p. 47-49).
Responsibility: by Evan R. Farrer.
Material Type: Document (dct); Thesis/dissertation (deg); Internet resource (url); \{eBook\} (ebk)
Date of Entry: 20110923
Update: 20111203
Provider: \{OCLC\}},
author = {Farrer, Evan R},
institution = {California State University, Chico},
isbn = {https://docs.google.com/file/d/0B5C1aVVb3qRONVhiNDBiNUw0am8/edit?pli=1\&ei=Wun4ULncD5DbigLU2oDYAQ\&usg=AFQjCNFCv2jB-FeGRDEbOFtBFdqluInmyw\&bvm=bv.41248874,d.cGE},
keywords = {Computer software,Testing},
publisher = {California State University, Chico},
shorttitle = {Computer Science Dept.},
title = {{A quantitative analysis of whether unit testing obviates static type checking for error detection}},
url = {http://csuchico-dspace.calstate.edu/bitstream/handle/10211.4/296/Evan Farrer Project.pdf},
volume = {Computer S},
year = {2011}
}
@book{vanexel_2012,
abstract = {Since its origin, the Structured Query Language or SQL has grown from a specific tool to allow access relational data to the most common method for storing, manipulating, and retrieving data. The rise in the use of SQL has been accompanied by numerous updates to increase its capabilities, but SQL has been ignored by the refactoring movement which has been seeking to improve the maintainability, readability, and stability of procedural code for over a decade. The immense benefits derived from easier maintenance can be directly accounted for by all parties, and any methodology that can make this process more comfortable and less error prone should be embraced. SQL has evolved to become more powerful than ever, but its code maintenance methodologies have not kept pace. The use of SQL throughout software is not decreasing, and the lost benefit of refactoring on SQL code must be addressed.},
address = {Long Beach, Calif.},
author = {{Van Exel}, Leslie M.},
institution = {California State University, Long Beach},
publisher = {California State University, Long Beach},
shorttitle = {Department of Computer Engineering and Computer Sc},
title = {{Applying Database Refactoring Techniques to Procedural SQL}},
url = {http://gradworks.umi.com/1511395.pdf},
volume = {Department},
year = {2012}
}
@book{weinmann_2007,
address = {Milton Keynes, England},
author = {Weinmann, Walter},
institution = {The Open University},
publisher = {The Open University},
shorttitle = {Dept. of Computing and IT},
title = {{Applying Patterns and SQL Idioms to Optimise Relational Database Queries}},
url = {http://repsi-tool.googlecode.com/files/Dissertation U7637432.pdf},
volume = {Dept. of C},
year = {2007}
}
